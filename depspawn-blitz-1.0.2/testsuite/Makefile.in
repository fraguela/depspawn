# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Written by Patrick Guio <patrick.guio@fys.uio.no>
#

# Blitz++ test suite makefile
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
check_PROGRAMS = 64bit$(EXEEXT) Adnene-Ben-Abdallah-1$(EXEEXT) \
	Adnene-Ben-Abdallah-2$(EXEEXT) alignment$(EXEEXT) \
	arrayresize$(EXEEXT) arrayinitialize$(EXEEXT) bitwise$(EXEEXT) \
	chris-jeffery-1$(EXEEXT) chris-jeffery-2$(EXEEXT) \
	chris-jeffery-3$(EXEEXT) complex-test$(EXEEXT) \
	constarray$(EXEEXT) contiguous$(EXEEXT) copy$(EXEEXT) \
	ctors$(EXEEXT) derrick-bass-1$(EXEEXT) derrick-bass-3$(EXEEXT) \
	exprctor$(EXEEXT) expression-slicing$(EXEEXT) extract$(EXEEXT) \
	free$(EXEEXT) gary-huber-1$(EXEEXT) indexexpr-base$(EXEEXT) \
	initialize$(EXEEXT) int-math-func$(EXEEXT) interlace$(EXEEXT) \
	iter$(EXEEXT) Josef-Wagenhuber$(EXEEXT) levicivita$(EXEEXT) \
	loop1$(EXEEXT) matthias-troyer-1$(EXEEXT) \
	matthias-troyer-2$(EXEEXT) mattias-lindstroem-1$(EXEEXT) \
	member_function$(EXEEXT) minmax$(EXEEXT) minsumpow$(EXEEXT) \
	module$(EXEEXT) multicomponent$(EXEEXT) \
	multicomponent-2$(EXEEXT) newet$(EXEEXT) \
	Olaf-Ronneberger-1$(EXEEXT) patrik-jonsson-1$(EXEEXT) \
	peter-bienstman-1$(EXEEXT) peter-bienstman-2$(EXEEXT) \
	peter-bienstman-3$(EXEEXT) peter-bienstman-4$(EXEEXT) \
	peter-bienstman-5$(EXEEXT) peter-nordlund-1$(EXEEXT) \
	peter-nordlund-2$(EXEEXT) peter-nordlund-3$(EXEEXT) \
	preexisting$(EXEEXT) promote$(EXEEXT) pthread$(EXEEXT) \
	qcd$(EXEEXT) reduce$(EXEEXT) reindex$(EXEEXT) reverse$(EXEEXT) \
	safeToReturn$(EXEEXT) shapecheck$(EXEEXT) shape$(EXEEXT) \
	slice-iterators$(EXEEXT) stencil-et$(EXEEXT) \
	stencil-extent$(EXEEXT) storage$(EXEEXT) stub$(EXEEXT) \
	theodore-papadopoulo-1$(EXEEXT) tinymat$(EXEEXT) \
	tinyvec$(EXEEXT) transpose$(EXEEXT) troyer-genilloud$(EXEEXT) \
	tvinitialize$(EXEEXT) Ulisses-Mello-1$(EXEEXT) \
	weakref$(EXEEXT) wei-ku-1$(EXEEXT) where$(EXEEXT) \
	zeek-1$(EXEEXT) cast$(EXEEXT) serialize$(EXEEXT) \
	update$(EXEEXT) declfunc$(EXEEXT)
subdir = testsuite
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_check_cxx_features.m4 \
	$(top_srcdir)/m4/ac_compiler_specific_header.m4 \
	$(top_srcdir)/m4/ac_compilers_64bits.m4 \
	$(top_srcdir)/m4/ac_cxx_alignment_directive.m4 \
	$(top_srcdir)/m4/ac_cxx_bool.m4 \
	$(top_srcdir)/m4/ac_cxx_complex_math_in_namespace_std.m4 \
	$(top_srcdir)/m4/ac_cxx_const_cast.m4 \
	$(top_srcdir)/m4/ac_cxx_default_template_parameters.m4 \
	$(top_srcdir)/m4/ac_cxx_dynamic_cast.m4 \
	$(top_srcdir)/m4/ac_cxx_enable_debug.m4 \
	$(top_srcdir)/m4/ac_cxx_enable_optimize.m4 \
	$(top_srcdir)/m4/ac_cxx_enum_computations.m4 \
	$(top_srcdir)/m4/ac_cxx_enum_computations_with_cast.m4 \
	$(top_srcdir)/m4/ac_cxx_exceptions.m4 \
	$(top_srcdir)/m4/ac_cxx_explicit.m4 \
	$(top_srcdir)/m4/ac_cxx_explicit_template_function_qualification.m4 \
	$(top_srcdir)/m4/ac_cxx_flags_preset.m4 \
	$(top_srcdir)/m4/ac_cxx_full_specialization_syntax.m4 \
	$(top_srcdir)/m4/ac_cxx_function_nontype_parameters.m4 \
	$(top_srcdir)/m4/ac_cxx_general.m4 \
	$(top_srcdir)/m4/ac_cxx_have_climits.m4 \
	$(top_srcdir)/m4/ac_cxx_have_complex.m4 \
	$(top_srcdir)/m4/ac_cxx_have_complex_fcns.m4 \
	$(top_srcdir)/m4/ac_cxx_have_complex_math1.m4 \
	$(top_srcdir)/m4/ac_cxx_have_complex_math2.m4 \
	$(top_srcdir)/m4/ac_cxx_have_cstring.m4 \
	$(top_srcdir)/m4/ac_cxx_have_ieee_math.m4 \
	$(top_srcdir)/m4/ac_cxx_have_numeric_limits.m4 \
	$(top_srcdir)/m4/ac_cxx_have_rusage.m4 \
	$(top_srcdir)/m4/ac_cxx_have_std.m4 \
	$(top_srcdir)/m4/ac_cxx_have_stl.m4 \
	$(top_srcdir)/m4/ac_cxx_have_system_v_math.m4 \
	$(top_srcdir)/m4/ac_cxx_have_valarray.m4 \
	$(top_srcdir)/m4/ac_cxx_isnan_in_namespace_std.m4 \
	$(top_srcdir)/m4/ac_cxx_keywords.m4 \
	$(top_srcdir)/m4/ac_cxx_math_absint_in_namespace_std.m4 \
	$(top_srcdir)/m4/ac_cxx_math_fn_in_namespace_std.m4 \
	$(top_srcdir)/m4/ac_cxx_member_constants.m4 \
	$(top_srcdir)/m4/ac_cxx_member_templates.m4 \
	$(top_srcdir)/m4/ac_cxx_member_templates_outside_class.m4 \
	$(top_srcdir)/m4/ac_cxx_mutable.m4 \
	$(top_srcdir)/m4/ac_cxx_nceg_restrict.m4 \
	$(top_srcdir)/m4/ac_cxx_nceg_restrict_egcs.m4 \
	$(top_srcdir)/m4/ac_cxx_old_for_scoping.m4 \
	$(top_srcdir)/m4/ac_cxx_partial_ordering.m4 \
	$(top_srcdir)/m4/ac_cxx_partial_specialization.m4 \
	$(top_srcdir)/m4/ac_cxx_reinterpret_cast.m4 \
	$(top_srcdir)/m4/ac_cxx_rtti.m4 \
	$(top_srcdir)/m4/ac_cxx_standard_library.m4 \
	$(top_srcdir)/m4/ac_cxx_static_cast.m4 \
	$(top_srcdir)/m4/ac_cxx_template_keyword_qualifier.m4 \
	$(top_srcdir)/m4/ac_cxx_template_qualified_base_class.m4 \
	$(top_srcdir)/m4/ac_cxx_template_qualified_return_type.m4 \
	$(top_srcdir)/m4/ac_cxx_template_scoped_argument_matching.m4 \
	$(top_srcdir)/m4/ac_cxx_templates.m4 \
	$(top_srcdir)/m4/ac_cxx_templates_as_template_arguments.m4 \
	$(top_srcdir)/m4/ac_cxx_templates_features.m4 \
	$(top_srcdir)/m4/ac_cxx_type_casts.m4 \
	$(top_srcdir)/m4/ac_cxx_type_promotion.m4 \
	$(top_srcdir)/m4/ac_cxx_typename.m4 \
	$(top_srcdir)/m4/ac_cxx_use_numtrait.m4 \
	$(top_srcdir)/m4/ac_env.m4 \
	$(top_srcdir)/m4/ac_fortran_flags_preset.m4 \
	$(top_srcdir)/m4/ac_info.m4 $(top_srcdir)/m4/ac_lib_blas.m4 \
	$(top_srcdir)/m4/ac_prog_doxygen.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_serialization.m4 \
	$(top_srcdir)/m4/ax_create_pkgconfig_info.m4 \
	$(top_srcdir)/m4/ax_dirname.m4 \
	$(top_srcdir)/m4/ax_prefix_config_h.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(check_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/blitz/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_64bit_OBJECTS = 64bit-64bit.$(OBJEXT)
64bit_OBJECTS = $(am_64bit_OBJECTS)
64bit_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
64bit_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
64bit_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(64bit_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_Adnene_Ben_Abdallah_1_OBJECTS = Adnene-Ben-Abdallah-1.$(OBJEXT)
Adnene_Ben_Abdallah_1_OBJECTS = $(am_Adnene_Ben_Abdallah_1_OBJECTS)
Adnene_Ben_Abdallah_1_LDADD = $(LDADD)
Adnene_Ben_Abdallah_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_Adnene_Ben_Abdallah_2_OBJECTS = Adnene-Ben-Abdallah-2.$(OBJEXT)
Adnene_Ben_Abdallah_2_OBJECTS = $(am_Adnene_Ben_Abdallah_2_OBJECTS)
Adnene_Ben_Abdallah_2_LDADD = $(LDADD)
Adnene_Ben_Abdallah_2_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_Josef_Wagenhuber_OBJECTS = Josef-Wagenhuber.$(OBJEXT)
Josef_Wagenhuber_OBJECTS = $(am_Josef_Wagenhuber_OBJECTS)
Josef_Wagenhuber_LDADD = $(LDADD)
Josef_Wagenhuber_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_Olaf_Ronneberger_1_OBJECTS = Olaf-Ronneberger-1.$(OBJEXT)
Olaf_Ronneberger_1_OBJECTS = $(am_Olaf_Ronneberger_1_OBJECTS)
Olaf_Ronneberger_1_LDADD = $(LDADD)
Olaf_Ronneberger_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_Ulisses_Mello_1_OBJECTS = Ulisses-Mello-1.$(OBJEXT)
Ulisses_Mello_1_OBJECTS = $(am_Ulisses_Mello_1_OBJECTS)
Ulisses_Mello_1_LDADD = $(LDADD)
Ulisses_Mello_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_alignment_OBJECTS = alignment.$(OBJEXT)
alignment_OBJECTS = $(am_alignment_OBJECTS)
alignment_LDADD = $(LDADD)
alignment_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_arrayinitialize_OBJECTS = arrayinitialize.$(OBJEXT)
arrayinitialize_OBJECTS = $(am_arrayinitialize_OBJECTS)
arrayinitialize_LDADD = $(LDADD)
arrayinitialize_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_arrayresize_OBJECTS = arrayresize.$(OBJEXT)
arrayresize_OBJECTS = $(am_arrayresize_OBJECTS)
arrayresize_LDADD = $(LDADD)
arrayresize_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_bitwise_OBJECTS = bitwise.$(OBJEXT)
bitwise_OBJECTS = $(am_bitwise_OBJECTS)
bitwise_LDADD = $(LDADD)
bitwise_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_cast_OBJECTS = cast.$(OBJEXT)
cast_OBJECTS = $(am_cast_OBJECTS)
cast_LDADD = $(LDADD)
cast_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_chris_jeffery_1_OBJECTS = chris-jeffery-1.$(OBJEXT)
chris_jeffery_1_OBJECTS = $(am_chris_jeffery_1_OBJECTS)
chris_jeffery_1_LDADD = $(LDADD)
chris_jeffery_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_chris_jeffery_2_OBJECTS = chris-jeffery-2.$(OBJEXT)
chris_jeffery_2_OBJECTS = $(am_chris_jeffery_2_OBJECTS)
chris_jeffery_2_LDADD = $(LDADD)
chris_jeffery_2_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_chris_jeffery_3_OBJECTS = chris-jeffery-3.$(OBJEXT)
chris_jeffery_3_OBJECTS = $(am_chris_jeffery_3_OBJECTS)
chris_jeffery_3_LDADD = $(LDADD)
chris_jeffery_3_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_complex_test_OBJECTS = complex-test.$(OBJEXT)
complex_test_OBJECTS = $(am_complex_test_OBJECTS)
complex_test_LDADD = $(LDADD)
complex_test_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_constarray_OBJECTS = constarray.$(OBJEXT)
constarray_OBJECTS = $(am_constarray_OBJECTS)
constarray_LDADD = $(LDADD)
constarray_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_contiguous_OBJECTS = contiguous.$(OBJEXT)
contiguous_OBJECTS = $(am_contiguous_OBJECTS)
contiguous_LDADD = $(LDADD)
contiguous_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_copy_OBJECTS = copy.$(OBJEXT)
copy_OBJECTS = $(am_copy_OBJECTS)
copy_LDADD = $(LDADD)
copy_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_ctors_OBJECTS = ctors.$(OBJEXT)
ctors_OBJECTS = $(am_ctors_OBJECTS)
ctors_LDADD = $(LDADD)
ctors_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_declfunc_OBJECTS = declfunc.$(OBJEXT)
declfunc_OBJECTS = $(am_declfunc_OBJECTS)
declfunc_LDADD = $(LDADD)
declfunc_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_derrick_bass_1_OBJECTS = derrick-bass-1.$(OBJEXT)
derrick_bass_1_OBJECTS = $(am_derrick_bass_1_OBJECTS)
derrick_bass_1_LDADD = $(LDADD)
derrick_bass_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_derrick_bass_3_OBJECTS = derrick-bass-3.$(OBJEXT)
derrick_bass_3_OBJECTS = $(am_derrick_bass_3_OBJECTS)
derrick_bass_3_LDADD = $(LDADD)
derrick_bass_3_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_exprctor_OBJECTS = exprctor.$(OBJEXT)
exprctor_OBJECTS = $(am_exprctor_OBJECTS)
exprctor_LDADD = $(LDADD)
exprctor_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_expression_slicing_OBJECTS = expression-slicing.$(OBJEXT)
expression_slicing_OBJECTS = $(am_expression_slicing_OBJECTS)
expression_slicing_LDADD = $(LDADD)
expression_slicing_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_extract_OBJECTS = extract.$(OBJEXT)
extract_OBJECTS = $(am_extract_OBJECTS)
extract_LDADD = $(LDADD)
extract_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_free_OBJECTS = free.$(OBJEXT)
free_OBJECTS = $(am_free_OBJECTS)
free_LDADD = $(LDADD)
free_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_gary_huber_1_OBJECTS = gary-huber-1.$(OBJEXT)
gary_huber_1_OBJECTS = $(am_gary_huber_1_OBJECTS)
gary_huber_1_LDADD = $(LDADD)
gary_huber_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_indexexpr_base_OBJECTS = indexexpr-base.$(OBJEXT)
indexexpr_base_OBJECTS = $(am_indexexpr_base_OBJECTS)
indexexpr_base_LDADD = $(LDADD)
indexexpr_base_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_initialize_OBJECTS = initialize.$(OBJEXT)
initialize_OBJECTS = $(am_initialize_OBJECTS)
initialize_LDADD = $(LDADD)
initialize_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_int_math_func_OBJECTS = int-math-func.$(OBJEXT)
int_math_func_OBJECTS = $(am_int_math_func_OBJECTS)
int_math_func_LDADD = $(LDADD)
int_math_func_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_interlace_OBJECTS = interlace.$(OBJEXT)
interlace_OBJECTS = $(am_interlace_OBJECTS)
interlace_LDADD = $(LDADD)
interlace_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_iter_OBJECTS = iter.$(OBJEXT)
iter_OBJECTS = $(am_iter_OBJECTS)
iter_LDADD = $(LDADD)
iter_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_levicivita_OBJECTS = levicivita.$(OBJEXT)
levicivita_OBJECTS = $(am_levicivita_OBJECTS)
levicivita_LDADD = $(LDADD)
levicivita_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_loop1_OBJECTS = loop1.$(OBJEXT)
loop1_OBJECTS = $(am_loop1_OBJECTS)
loop1_LDADD = $(LDADD)
loop1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_matthias_troyer_1_OBJECTS = matthias-troyer-1.$(OBJEXT)
matthias_troyer_1_OBJECTS = $(am_matthias_troyer_1_OBJECTS)
matthias_troyer_1_LDADD = $(LDADD)
matthias_troyer_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_matthias_troyer_2_OBJECTS = matthias-troyer-2.$(OBJEXT)
matthias_troyer_2_OBJECTS = $(am_matthias_troyer_2_OBJECTS)
matthias_troyer_2_LDADD = $(LDADD)
matthias_troyer_2_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_mattias_lindstroem_1_OBJECTS = mattias-lindstroem-1.$(OBJEXT)
mattias_lindstroem_1_OBJECTS = $(am_mattias_lindstroem_1_OBJECTS)
mattias_lindstroem_1_LDADD = $(LDADD)
mattias_lindstroem_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_member_function_OBJECTS = member_function.$(OBJEXT)
member_function_OBJECTS = $(am_member_function_OBJECTS)
member_function_LDADD = $(LDADD)
member_function_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_minmax_OBJECTS = minmax.$(OBJEXT)
minmax_OBJECTS = $(am_minmax_OBJECTS)
minmax_LDADD = $(LDADD)
minmax_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_minsumpow_OBJECTS = minsumpow.$(OBJEXT)
minsumpow_OBJECTS = $(am_minsumpow_OBJECTS)
minsumpow_LDADD = $(LDADD)
minsumpow_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_module_OBJECTS = module1.$(OBJEXT) module2.$(OBJEXT)
module_OBJECTS = $(am_module_OBJECTS)
module_LDADD = $(LDADD)
module_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_multicomponent_OBJECTS = multicomponent.$(OBJEXT)
multicomponent_OBJECTS = $(am_multicomponent_OBJECTS)
multicomponent_LDADD = $(LDADD)
multicomponent_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_multicomponent_2_OBJECTS = multicomponent-2.$(OBJEXT)
multicomponent_2_OBJECTS = $(am_multicomponent_2_OBJECTS)
multicomponent_2_LDADD = $(LDADD)
multicomponent_2_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_newet_OBJECTS = newet.$(OBJEXT)
newet_OBJECTS = $(am_newet_OBJECTS)
newet_LDADD = $(LDADD)
newet_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_patrik_jonsson_1_OBJECTS = patrik-jonsson-1.$(OBJEXT)
patrik_jonsson_1_OBJECTS = $(am_patrik_jonsson_1_OBJECTS)
patrik_jonsson_1_LDADD = $(LDADD)
patrik_jonsson_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_peter_bienstman_1_OBJECTS = peter-bienstman-1.$(OBJEXT)
peter_bienstman_1_OBJECTS = $(am_peter_bienstman_1_OBJECTS)
peter_bienstman_1_LDADD = $(LDADD)
peter_bienstman_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_peter_bienstman_2_OBJECTS = peter-bienstman-2.$(OBJEXT)
peter_bienstman_2_OBJECTS = $(am_peter_bienstman_2_OBJECTS)
peter_bienstman_2_LDADD = $(LDADD)
peter_bienstman_2_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_peter_bienstman_3_OBJECTS = peter-bienstman-3.$(OBJEXT)
peter_bienstman_3_OBJECTS = $(am_peter_bienstman_3_OBJECTS)
peter_bienstman_3_LDADD = $(LDADD)
peter_bienstman_3_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_peter_bienstman_4_OBJECTS = peter-bienstman-4.$(OBJEXT)
peter_bienstman_4_OBJECTS = $(am_peter_bienstman_4_OBJECTS)
peter_bienstman_4_LDADD = $(LDADD)
peter_bienstman_4_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_peter_bienstman_5_OBJECTS = peter-bienstman-5.$(OBJEXT)
peter_bienstman_5_OBJECTS = $(am_peter_bienstman_5_OBJECTS)
peter_bienstman_5_LDADD = $(LDADD)
peter_bienstman_5_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_peter_nordlund_1_OBJECTS = peter-nordlund-1.$(OBJEXT)
peter_nordlund_1_OBJECTS = $(am_peter_nordlund_1_OBJECTS)
peter_nordlund_1_LDADD = $(LDADD)
peter_nordlund_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_peter_nordlund_2_OBJECTS = peter-nordlund-2.$(OBJEXT)
peter_nordlund_2_OBJECTS = $(am_peter_nordlund_2_OBJECTS)
peter_nordlund_2_LDADD = $(LDADD)
peter_nordlund_2_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_peter_nordlund_3_OBJECTS = peter-nordlund-3.$(OBJEXT)
peter_nordlund_3_OBJECTS = $(am_peter_nordlund_3_OBJECTS)
peter_nordlund_3_LDADD = $(LDADD)
peter_nordlund_3_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_preexisting_OBJECTS = preexisting.$(OBJEXT)
preexisting_OBJECTS = $(am_preexisting_OBJECTS)
preexisting_LDADD = $(LDADD)
preexisting_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_promote_OBJECTS = promote.$(OBJEXT)
promote_OBJECTS = $(am_promote_OBJECTS)
promote_LDADD = $(LDADD)
promote_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_pthread_OBJECTS = pthread.$(OBJEXT)
pthread_OBJECTS = $(am_pthread_OBJECTS)
pthread_LDADD = $(LDADD)
pthread_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_qcd_OBJECTS = qcd.$(OBJEXT)
qcd_OBJECTS = $(am_qcd_OBJECTS)
qcd_LDADD = $(LDADD)
qcd_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_reduce_OBJECTS = reduce.$(OBJEXT)
reduce_OBJECTS = $(am_reduce_OBJECTS)
reduce_LDADD = $(LDADD)
reduce_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_reindex_OBJECTS = reindex.$(OBJEXT)
reindex_OBJECTS = $(am_reindex_OBJECTS)
reindex_LDADD = $(LDADD)
reindex_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_reverse_OBJECTS = reverse.$(OBJEXT)
reverse_OBJECTS = $(am_reverse_OBJECTS)
reverse_LDADD = $(LDADD)
reverse_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_safeToReturn_OBJECTS = safeToReturn.$(OBJEXT)
safeToReturn_OBJECTS = $(am_safeToReturn_OBJECTS)
safeToReturn_LDADD = $(LDADD)
safeToReturn_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_serialize_OBJECTS = serialize.$(OBJEXT)
serialize_OBJECTS = $(am_serialize_OBJECTS)
serialize_LDADD = $(LDADD)
serialize_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_shape_OBJECTS = shape.$(OBJEXT)
shape_OBJECTS = $(am_shape_OBJECTS)
shape_LDADD = $(LDADD)
shape_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_shapecheck_OBJECTS = shapecheck.$(OBJEXT)
shapecheck_OBJECTS = $(am_shapecheck_OBJECTS)
shapecheck_LDADD = $(LDADD)
shapecheck_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_slice_iterators_OBJECTS = slice-iterators.$(OBJEXT)
slice_iterators_OBJECTS = $(am_slice_iterators_OBJECTS)
slice_iterators_LDADD = $(LDADD)
slice_iterators_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_stencil_et_OBJECTS = stencil-et.$(OBJEXT)
stencil_et_OBJECTS = $(am_stencil_et_OBJECTS)
stencil_et_LDADD = $(LDADD)
stencil_et_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_stencil_extent_OBJECTS = stencil-extent.$(OBJEXT)
stencil_extent_OBJECTS = $(am_stencil_extent_OBJECTS)
stencil_extent_LDADD = $(LDADD)
stencil_extent_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_storage_OBJECTS = storage.$(OBJEXT)
storage_OBJECTS = $(am_storage_OBJECTS)
storage_LDADD = $(LDADD)
storage_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_stub_OBJECTS = stub.$(OBJEXT)
stub_OBJECTS = $(am_stub_OBJECTS)
stub_LDADD = $(LDADD)
stub_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_theodore_papadopoulo_1_OBJECTS = theodore-papadopoulo-1.$(OBJEXT)
theodore_papadopoulo_1_OBJECTS = $(am_theodore_papadopoulo_1_OBJECTS)
theodore_papadopoulo_1_LDADD = $(LDADD)
theodore_papadopoulo_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_tinymat_OBJECTS = tinymat.$(OBJEXT)
tinymat_OBJECTS = $(am_tinymat_OBJECTS)
tinymat_LDADD = $(LDADD)
tinymat_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_tinyvec_OBJECTS = tinyvec.$(OBJEXT)
tinyvec_OBJECTS = $(am_tinyvec_OBJECTS)
tinyvec_LDADD = $(LDADD)
tinyvec_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_transpose_OBJECTS = transpose.$(OBJEXT)
transpose_OBJECTS = $(am_transpose_OBJECTS)
transpose_LDADD = $(LDADD)
transpose_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_troyer_genilloud_OBJECTS = troyer-genilloud.$(OBJEXT)
troyer_genilloud_OBJECTS = $(am_troyer_genilloud_OBJECTS)
troyer_genilloud_LDADD = $(LDADD)
troyer_genilloud_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_tvinitialize_OBJECTS = tvinitialize.$(OBJEXT)
tvinitialize_OBJECTS = $(am_tvinitialize_OBJECTS)
tvinitialize_LDADD = $(LDADD)
tvinitialize_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_update_OBJECTS = update.$(OBJEXT)
update_OBJECTS = $(am_update_OBJECTS)
update_LDADD = $(LDADD)
update_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_weakref_OBJECTS = weakref.$(OBJEXT)
weakref_OBJECTS = $(am_weakref_OBJECTS)
weakref_LDADD = $(LDADD)
weakref_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_wei_ku_1_OBJECTS = wei-ku-1.$(OBJEXT)
wei_ku_1_OBJECTS = $(am_wei_ku_1_OBJECTS)
wei_ku_1_LDADD = $(LDADD)
wei_ku_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_where_OBJECTS = where.$(OBJEXT)
where_OBJECTS = $(am_where_OBJECTS)
where_LDADD = $(LDADD)
where_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
am_zeek_1_OBJECTS = zeek-1.$(OBJEXT)
zeek_1_OBJECTS = $(am_zeek_1_OBJECTS)
zeek_1_LDADD = $(LDADD)
zeek_1_DEPENDENCIES = $(top_builddir)/lib/libblitz.la \
	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/64bit-64bit.Po \
	./$(DEPDIR)/Adnene-Ben-Abdallah-1.Po \
	./$(DEPDIR)/Adnene-Ben-Abdallah-2.Po \
	./$(DEPDIR)/Josef-Wagenhuber.Po \
	./$(DEPDIR)/Olaf-Ronneberger-1.Po \
	./$(DEPDIR)/Ulisses-Mello-1.Po ./$(DEPDIR)/alignment.Po \
	./$(DEPDIR)/arrayinitialize.Po ./$(DEPDIR)/arrayresize.Po \
	./$(DEPDIR)/bitwise.Po ./$(DEPDIR)/cast.Po \
	./$(DEPDIR)/chris-jeffery-1.Po ./$(DEPDIR)/chris-jeffery-2.Po \
	./$(DEPDIR)/chris-jeffery-3.Po ./$(DEPDIR)/complex-test.Po \
	./$(DEPDIR)/constarray.Po ./$(DEPDIR)/contiguous.Po \
	./$(DEPDIR)/copy.Po ./$(DEPDIR)/ctors.Po \
	./$(DEPDIR)/declfunc.Po ./$(DEPDIR)/derrick-bass-1.Po \
	./$(DEPDIR)/derrick-bass-3.Po ./$(DEPDIR)/exprctor.Po \
	./$(DEPDIR)/expression-slicing.Po ./$(DEPDIR)/extract.Po \
	./$(DEPDIR)/free.Po ./$(DEPDIR)/gary-huber-1.Po \
	./$(DEPDIR)/indexexpr-base.Po ./$(DEPDIR)/initialize.Po \
	./$(DEPDIR)/int-math-func.Po ./$(DEPDIR)/interlace.Po \
	./$(DEPDIR)/iter.Po ./$(DEPDIR)/levicivita.Po \
	./$(DEPDIR)/loop1.Po ./$(DEPDIR)/matthias-troyer-1.Po \
	./$(DEPDIR)/matthias-troyer-2.Po \
	./$(DEPDIR)/mattias-lindstroem-1.Po \
	./$(DEPDIR)/member_function.Po ./$(DEPDIR)/minmax.Po \
	./$(DEPDIR)/minsumpow.Po ./$(DEPDIR)/module1.Po \
	./$(DEPDIR)/module2.Po ./$(DEPDIR)/multicomponent-2.Po \
	./$(DEPDIR)/multicomponent.Po ./$(DEPDIR)/newet.Po \
	./$(DEPDIR)/patrik-jonsson-1.Po \
	./$(DEPDIR)/peter-bienstman-1.Po \
	./$(DEPDIR)/peter-bienstman-2.Po \
	./$(DEPDIR)/peter-bienstman-3.Po \
	./$(DEPDIR)/peter-bienstman-4.Po \
	./$(DEPDIR)/peter-bienstman-5.Po \
	./$(DEPDIR)/peter-nordlund-1.Po \
	./$(DEPDIR)/peter-nordlund-2.Po \
	./$(DEPDIR)/peter-nordlund-3.Po ./$(DEPDIR)/preexisting.Po \
	./$(DEPDIR)/promote.Po ./$(DEPDIR)/pthread.Po \
	./$(DEPDIR)/qcd.Po ./$(DEPDIR)/reduce.Po \
	./$(DEPDIR)/reindex.Po ./$(DEPDIR)/reverse.Po \
	./$(DEPDIR)/safeToReturn.Po ./$(DEPDIR)/serialize.Po \
	./$(DEPDIR)/shape.Po ./$(DEPDIR)/shapecheck.Po \
	./$(DEPDIR)/slice-iterators.Po ./$(DEPDIR)/stencil-et.Po \
	./$(DEPDIR)/stencil-extent.Po ./$(DEPDIR)/storage.Po \
	./$(DEPDIR)/stub.Po ./$(DEPDIR)/theodore-papadopoulo-1.Po \
	./$(DEPDIR)/tinymat.Po ./$(DEPDIR)/tinyvec.Po \
	./$(DEPDIR)/transpose.Po ./$(DEPDIR)/troyer-genilloud.Po \
	./$(DEPDIR)/tvinitialize.Po ./$(DEPDIR)/update.Po \
	./$(DEPDIR)/weakref.Po ./$(DEPDIR)/wei-ku-1.Po \
	./$(DEPDIR)/where.Po ./$(DEPDIR)/zeek-1.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(64bit_SOURCES) $(Adnene_Ben_Abdallah_1_SOURCES) \
	$(Adnene_Ben_Abdallah_2_SOURCES) $(Josef_Wagenhuber_SOURCES) \
	$(Olaf_Ronneberger_1_SOURCES) $(Ulisses_Mello_1_SOURCES) \
	$(alignment_SOURCES) $(arrayinitialize_SOURCES) \
	$(arrayresize_SOURCES) $(bitwise_SOURCES) $(cast_SOURCES) \
	$(chris_jeffery_1_SOURCES) $(chris_jeffery_2_SOURCES) \
	$(chris_jeffery_3_SOURCES) $(complex_test_SOURCES) \
	$(constarray_SOURCES) $(contiguous_SOURCES) $(copy_SOURCES) \
	$(ctors_SOURCES) $(declfunc_SOURCES) $(derrick_bass_1_SOURCES) \
	$(derrick_bass_3_SOURCES) $(exprctor_SOURCES) \
	$(expression_slicing_SOURCES) $(extract_SOURCES) \
	$(free_SOURCES) $(gary_huber_1_SOURCES) \
	$(indexexpr_base_SOURCES) $(initialize_SOURCES) \
	$(int_math_func_SOURCES) $(interlace_SOURCES) $(iter_SOURCES) \
	$(levicivita_SOURCES) $(loop1_SOURCES) \
	$(matthias_troyer_1_SOURCES) $(matthias_troyer_2_SOURCES) \
	$(mattias_lindstroem_1_SOURCES) $(member_function_SOURCES) \
	$(minmax_SOURCES) $(minsumpow_SOURCES) $(module_SOURCES) \
	$(multicomponent_SOURCES) $(multicomponent_2_SOURCES) \
	$(newet_SOURCES) $(patrik_jonsson_1_SOURCES) \
	$(peter_bienstman_1_SOURCES) $(peter_bienstman_2_SOURCES) \
	$(peter_bienstman_3_SOURCES) $(peter_bienstman_4_SOURCES) \
	$(peter_bienstman_5_SOURCES) $(peter_nordlund_1_SOURCES) \
	$(peter_nordlund_2_SOURCES) $(peter_nordlund_3_SOURCES) \
	$(preexisting_SOURCES) $(promote_SOURCES) $(pthread_SOURCES) \
	$(qcd_SOURCES) $(reduce_SOURCES) $(reindex_SOURCES) \
	$(reverse_SOURCES) $(safeToReturn_SOURCES) \
	$(serialize_SOURCES) $(shape_SOURCES) $(shapecheck_SOURCES) \
	$(slice_iterators_SOURCES) $(stencil_et_SOURCES) \
	$(stencil_extent_SOURCES) $(storage_SOURCES) $(stub_SOURCES) \
	$(theodore_papadopoulo_1_SOURCES) $(tinymat_SOURCES) \
	$(tinyvec_SOURCES) $(transpose_SOURCES) \
	$(troyer_genilloud_SOURCES) $(tvinitialize_SOURCES) \
	$(update_SOURCES) $(weakref_SOURCES) $(wei_ku_1_SOURCES) \
	$(where_SOURCES) $(zeek_1_SOURCES)
DIST_SOURCES = $(64bit_SOURCES) $(Adnene_Ben_Abdallah_1_SOURCES) \
	$(Adnene_Ben_Abdallah_2_SOURCES) $(Josef_Wagenhuber_SOURCES) \
	$(Olaf_Ronneberger_1_SOURCES) $(Ulisses_Mello_1_SOURCES) \
	$(alignment_SOURCES) $(arrayinitialize_SOURCES) \
	$(arrayresize_SOURCES) $(bitwise_SOURCES) $(cast_SOURCES) \
	$(chris_jeffery_1_SOURCES) $(chris_jeffery_2_SOURCES) \
	$(chris_jeffery_3_SOURCES) $(complex_test_SOURCES) \
	$(constarray_SOURCES) $(contiguous_SOURCES) $(copy_SOURCES) \
	$(ctors_SOURCES) $(declfunc_SOURCES) $(derrick_bass_1_SOURCES) \
	$(derrick_bass_3_SOURCES) $(exprctor_SOURCES) \
	$(expression_slicing_SOURCES) $(extract_SOURCES) \
	$(free_SOURCES) $(gary_huber_1_SOURCES) \
	$(indexexpr_base_SOURCES) $(initialize_SOURCES) \
	$(int_math_func_SOURCES) $(interlace_SOURCES) $(iter_SOURCES) \
	$(levicivita_SOURCES) $(loop1_SOURCES) \
	$(matthias_troyer_1_SOURCES) $(matthias_troyer_2_SOURCES) \
	$(mattias_lindstroem_1_SOURCES) $(member_function_SOURCES) \
	$(minmax_SOURCES) $(minsumpow_SOURCES) $(module_SOURCES) \
	$(multicomponent_SOURCES) $(multicomponent_2_SOURCES) \
	$(newet_SOURCES) $(patrik_jonsson_1_SOURCES) \
	$(peter_bienstman_1_SOURCES) $(peter_bienstman_2_SOURCES) \
	$(peter_bienstman_3_SOURCES) $(peter_bienstman_4_SOURCES) \
	$(peter_bienstman_5_SOURCES) $(peter_nordlund_1_SOURCES) \
	$(peter_nordlund_2_SOURCES) $(peter_nordlund_3_SOURCES) \
	$(preexisting_SOURCES) $(promote_SOURCES) $(pthread_SOURCES) \
	$(qcd_SOURCES) $(reduce_SOURCES) $(reindex_SOURCES) \
	$(reverse_SOURCES) $(safeToReturn_SOURCES) \
	$(serialize_SOURCES) $(shape_SOURCES) $(shapecheck_SOURCES) \
	$(slice_iterators_SOURCES) $(stencil_et_SOURCES) \
	$(stencil_extent_SOURCES) $(storage_SOURCES) $(stub_SOURCES) \
	$(theodore_papadopoulo_1_SOURCES) $(tinymat_SOURCES) \
	$(tinyvec_SOURCES) $(transpose_SOURCES) \
	$(troyer_genilloud_SOURCES) $(tvinitialize_SOURCES) \
	$(update_SOURCES) $(weakref_SOURCES) $(wei_ku_1_SOURCES) \
	$(where_SOURCES) $(zeek_1_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp \
	$(top_srcdir)/config/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AR_FLAGS = @AR_FLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLASLIB = @BLASLIB@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_SERIALIZATION_LIB = @BOOST_SERIALIZATION_LIB@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COMPILER_SPECIFIC_HEADER = @COMPILER_SPECIFIC_HEADER@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFCFLAG = @CXXFCFLAG@
CXXFFLAGS = @CXXFFLAGS@
CXXFLAGS = @CXXFLAGS@
CXX_DEBUG_FLAGS = @CXX_DEBUG_FLAGS@
CXX_LIBS = @CXX_LIBS@
CXX_OPTIMIZE_FLAGS = @CXX_OPTIMIZE_FLAGS@
CXX_PROFIL_FLAGS = @CXX_PROFIL_FLAGS@
CYGPATH_W = @CYGPATH_W@
DATE = @DATE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
F77_OPTIMIZE_FLAGS = @F77_OPTIMIZE_FLAGS@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_f90 = @FCFLAGS_f90@
FCLIBS = @FCLIBS@
FC_OPTIMIZE_FLAGS = @FC_OPTIMIZE_FLAGS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLIBS = @FLIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OS = @OS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEXI2HTML = @TEXI2HTML@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enable_dot = @enable_dot@
enable_html_docs = @enable_html_docs@
enable_latex_docs = @enable_latex_docs@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgconfig_libdir = @pkgconfig_libdir@
pkgconfig_libfile = @pkgconfig_libfile@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
valgrind = @valgrind@
AM_CPPFLAGS = -I$(srcdir) -I$(top_srcdir) -I$(top_builddir) $(BOOST_CPPFLAGS)
AM_CXXFLAGS = @CXX_DEBUG_FLAGS@ -DBZ_DEBUG
AM_LDFLAGS = $(BOOST_LDFLAGS)
LDADD = $(top_builddir)/lib/libblitz.la $(BOOST_SERIALIZATION_LIB)
check_HEADERS = testsuite.h
TESTS = $(check_PROGRAMS)
#TESTS_ENVIRONMENT = $(VALGRIND)

# 64bit test is special because it takes forever to run without optimization
64bit_SOURCES = 64bit.cpp
64bit_CXXFLAGS = @CXX_OPTIMIZE_FLAGS@ -DBZ_DEBUG
Adnene_Ben_Abdallah_1_SOURCES = Adnene-Ben-Abdallah-1.cpp
Adnene_Ben_Abdallah_2_SOURCES = Adnene-Ben-Abdallah-2.cpp
alignment_SOURCES = alignment.cpp
arrayinitialize_SOURCES = arrayinitialize.cpp
arrayresize_SOURCES = arrayresize.cpp
bitwise_SOURCES = bitwise.cpp
cast_SOURCES = cast.cpp
chris_jeffery_1_SOURCES = chris-jeffery-1.cpp
chris_jeffery_2_SOURCES = chris-jeffery-2.cpp
chris_jeffery_3_SOURCES = chris-jeffery-3.cpp
complex_test_SOURCES = complex-test.cpp
constarray_SOURCES = constarray.cpp
contiguous_SOURCES = contiguous.cpp
copy_SOURCES = copy.cpp
ctors_SOURCES = ctors.cpp
declfunc_SOURCES = declfunc.cpp
derrick_bass_1_SOURCES = derrick-bass-1.cpp
derrick_bass_3_SOURCES = derrick-bass-3.cpp
exprctor_SOURCES = exprctor.cpp
expression_slicing_SOURCES = expression-slicing.cpp
extract_SOURCES = extract.cpp
free_SOURCES = free.cpp
gary_huber_1_SOURCES = gary-huber-1.cpp
indexexpr_base_SOURCES = indexexpr-base.cpp
initialize_SOURCES = initialize.cpp
int_math_func_SOURCES = int-math-func.cpp
interlace_SOURCES = interlace.cpp
iter_SOURCES = iter.cpp
Josef_Wagenhuber_SOURCES = Josef-Wagenhuber.cpp
levicivita_SOURCES = levicivita.cpp
loop1_SOURCES = loop1.cpp
matthias_troyer_1_SOURCES = matthias-troyer-1.cpp
matthias_troyer_2_SOURCES = matthias-troyer-2.cpp
mattias_lindstroem_1_SOURCES = mattias-lindstroem-1.cpp
member_function_SOURCES = member_function.cpp
minmax_SOURCES = minmax.cpp
minsumpow_SOURCES = minsumpow.cpp
module_SOURCES = module1.cpp module2.cpp
multicomponent_SOURCES = multicomponent.cpp
multicomponent_2_SOURCES = multicomponent-2.cpp
newet_SOURCES = newet.cpp
Olaf_Ronneberger_1_SOURCES = Olaf-Ronneberger-1.cpp
patrik_jonsson_1_SOURCES = patrik-jonsson-1.cpp
peter_bienstman_1_SOURCES = peter-bienstman-1.cpp
peter_bienstman_2_SOURCES = peter-bienstman-2.cpp
peter_bienstman_3_SOURCES = peter-bienstman-3.cpp
peter_bienstman_4_SOURCES = peter-bienstman-4.cpp
peter_bienstman_5_SOURCES = peter-bienstman-5.cpp
peter_nordlund_1_SOURCES = peter-nordlund-1.cpp
peter_nordlund_2_SOURCES = peter-nordlund-2.cpp
peter_nordlund_3_SOURCES = peter-nordlund-3.cpp
preexisting_SOURCES = preexisting.cpp
promote_SOURCES = promote.cpp
pthread_SOURCES = pthread.cpp
qcd_SOURCES = qcd.cpp
reduce_SOURCES = reduce.cpp
reindex_SOURCES = reindex.cpp
reverse_SOURCES = reverse.cpp
safeToReturn_SOURCES = safeToReturn.cpp
serialize_SOURCES = serialize.cpp
shapecheck_SOURCES = shapecheck.cpp
shape_SOURCES = shape.cpp
slice_iterators_SOURCES = slice-iterators.cpp
stencil_et_SOURCES = stencil-et.cpp
stencil_extent_SOURCES = stencil-extent.cpp
storage_SOURCES = storage.cpp
stub_SOURCES = stub.cpp
theodore_papadopoulo_1_SOURCES = theodore-papadopoulo-1.cpp
tinymat_SOURCES = tinymat.cpp
tinyvec_SOURCES = tinyvec.cpp
transpose_SOURCES = transpose.cpp
troyer_genilloud_SOURCES = troyer-genilloud.cpp
tvinitialize_SOURCES = tvinitialize.cpp
Ulisses_Mello_1_SOURCES = Ulisses-Mello-1.cpp
update_SOURCES = update.cpp
weakref_SOURCES = weakref.cpp
wei_ku_1_SOURCES = wei-ku-1.cpp
where_SOURCES = where.cpp
zeek_1_SOURCES = zeek-1.cpp
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign testsuite/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign testsuite/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

64bit$(EXEEXT): $(64bit_OBJECTS) $(64bit_DEPENDENCIES) $(EXTRA_64bit_DEPENDENCIES) 
	@rm -f 64bit$(EXEEXT)
	$(AM_V_CXXLD)$(64bit_LINK) $(64bit_OBJECTS) $(64bit_LDADD) $(LIBS)

Adnene-Ben-Abdallah-1$(EXEEXT): $(Adnene_Ben_Abdallah_1_OBJECTS) $(Adnene_Ben_Abdallah_1_DEPENDENCIES) $(EXTRA_Adnene_Ben_Abdallah_1_DEPENDENCIES) 
	@rm -f Adnene-Ben-Abdallah-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Adnene_Ben_Abdallah_1_OBJECTS) $(Adnene_Ben_Abdallah_1_LDADD) $(LIBS)

Adnene-Ben-Abdallah-2$(EXEEXT): $(Adnene_Ben_Abdallah_2_OBJECTS) $(Adnene_Ben_Abdallah_2_DEPENDENCIES) $(EXTRA_Adnene_Ben_Abdallah_2_DEPENDENCIES) 
	@rm -f Adnene-Ben-Abdallah-2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Adnene_Ben_Abdallah_2_OBJECTS) $(Adnene_Ben_Abdallah_2_LDADD) $(LIBS)

Josef-Wagenhuber$(EXEEXT): $(Josef_Wagenhuber_OBJECTS) $(Josef_Wagenhuber_DEPENDENCIES) $(EXTRA_Josef_Wagenhuber_DEPENDENCIES) 
	@rm -f Josef-Wagenhuber$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Josef_Wagenhuber_OBJECTS) $(Josef_Wagenhuber_LDADD) $(LIBS)

Olaf-Ronneberger-1$(EXEEXT): $(Olaf_Ronneberger_1_OBJECTS) $(Olaf_Ronneberger_1_DEPENDENCIES) $(EXTRA_Olaf_Ronneberger_1_DEPENDENCIES) 
	@rm -f Olaf-Ronneberger-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Olaf_Ronneberger_1_OBJECTS) $(Olaf_Ronneberger_1_LDADD) $(LIBS)

Ulisses-Mello-1$(EXEEXT): $(Ulisses_Mello_1_OBJECTS) $(Ulisses_Mello_1_DEPENDENCIES) $(EXTRA_Ulisses_Mello_1_DEPENDENCIES) 
	@rm -f Ulisses-Mello-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Ulisses_Mello_1_OBJECTS) $(Ulisses_Mello_1_LDADD) $(LIBS)

alignment$(EXEEXT): $(alignment_OBJECTS) $(alignment_DEPENDENCIES) $(EXTRA_alignment_DEPENDENCIES) 
	@rm -f alignment$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(alignment_OBJECTS) $(alignment_LDADD) $(LIBS)

arrayinitialize$(EXEEXT): $(arrayinitialize_OBJECTS) $(arrayinitialize_DEPENDENCIES) $(EXTRA_arrayinitialize_DEPENDENCIES) 
	@rm -f arrayinitialize$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(arrayinitialize_OBJECTS) $(arrayinitialize_LDADD) $(LIBS)

arrayresize$(EXEEXT): $(arrayresize_OBJECTS) $(arrayresize_DEPENDENCIES) $(EXTRA_arrayresize_DEPENDENCIES) 
	@rm -f arrayresize$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(arrayresize_OBJECTS) $(arrayresize_LDADD) $(LIBS)

bitwise$(EXEEXT): $(bitwise_OBJECTS) $(bitwise_DEPENDENCIES) $(EXTRA_bitwise_DEPENDENCIES) 
	@rm -f bitwise$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bitwise_OBJECTS) $(bitwise_LDADD) $(LIBS)

cast$(EXEEXT): $(cast_OBJECTS) $(cast_DEPENDENCIES) $(EXTRA_cast_DEPENDENCIES) 
	@rm -f cast$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cast_OBJECTS) $(cast_LDADD) $(LIBS)

chris-jeffery-1$(EXEEXT): $(chris_jeffery_1_OBJECTS) $(chris_jeffery_1_DEPENDENCIES) $(EXTRA_chris_jeffery_1_DEPENDENCIES) 
	@rm -f chris-jeffery-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(chris_jeffery_1_OBJECTS) $(chris_jeffery_1_LDADD) $(LIBS)

chris-jeffery-2$(EXEEXT): $(chris_jeffery_2_OBJECTS) $(chris_jeffery_2_DEPENDENCIES) $(EXTRA_chris_jeffery_2_DEPENDENCIES) 
	@rm -f chris-jeffery-2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(chris_jeffery_2_OBJECTS) $(chris_jeffery_2_LDADD) $(LIBS)

chris-jeffery-3$(EXEEXT): $(chris_jeffery_3_OBJECTS) $(chris_jeffery_3_DEPENDENCIES) $(EXTRA_chris_jeffery_3_DEPENDENCIES) 
	@rm -f chris-jeffery-3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(chris_jeffery_3_OBJECTS) $(chris_jeffery_3_LDADD) $(LIBS)

complex-test$(EXEEXT): $(complex_test_OBJECTS) $(complex_test_DEPENDENCIES) $(EXTRA_complex_test_DEPENDENCIES) 
	@rm -f complex-test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(complex_test_OBJECTS) $(complex_test_LDADD) $(LIBS)

constarray$(EXEEXT): $(constarray_OBJECTS) $(constarray_DEPENDENCIES) $(EXTRA_constarray_DEPENDENCIES) 
	@rm -f constarray$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(constarray_OBJECTS) $(constarray_LDADD) $(LIBS)

contiguous$(EXEEXT): $(contiguous_OBJECTS) $(contiguous_DEPENDENCIES) $(EXTRA_contiguous_DEPENDENCIES) 
	@rm -f contiguous$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(contiguous_OBJECTS) $(contiguous_LDADD) $(LIBS)

copy$(EXEEXT): $(copy_OBJECTS) $(copy_DEPENDENCIES) $(EXTRA_copy_DEPENDENCIES) 
	@rm -f copy$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(copy_OBJECTS) $(copy_LDADD) $(LIBS)

ctors$(EXEEXT): $(ctors_OBJECTS) $(ctors_DEPENDENCIES) $(EXTRA_ctors_DEPENDENCIES) 
	@rm -f ctors$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ctors_OBJECTS) $(ctors_LDADD) $(LIBS)

declfunc$(EXEEXT): $(declfunc_OBJECTS) $(declfunc_DEPENDENCIES) $(EXTRA_declfunc_DEPENDENCIES) 
	@rm -f declfunc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(declfunc_OBJECTS) $(declfunc_LDADD) $(LIBS)

derrick-bass-1$(EXEEXT): $(derrick_bass_1_OBJECTS) $(derrick_bass_1_DEPENDENCIES) $(EXTRA_derrick_bass_1_DEPENDENCIES) 
	@rm -f derrick-bass-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(derrick_bass_1_OBJECTS) $(derrick_bass_1_LDADD) $(LIBS)

derrick-bass-3$(EXEEXT): $(derrick_bass_3_OBJECTS) $(derrick_bass_3_DEPENDENCIES) $(EXTRA_derrick_bass_3_DEPENDENCIES) 
	@rm -f derrick-bass-3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(derrick_bass_3_OBJECTS) $(derrick_bass_3_LDADD) $(LIBS)

exprctor$(EXEEXT): $(exprctor_OBJECTS) $(exprctor_DEPENDENCIES) $(EXTRA_exprctor_DEPENDENCIES) 
	@rm -f exprctor$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(exprctor_OBJECTS) $(exprctor_LDADD) $(LIBS)

expression-slicing$(EXEEXT): $(expression_slicing_OBJECTS) $(expression_slicing_DEPENDENCIES) $(EXTRA_expression_slicing_DEPENDENCIES) 
	@rm -f expression-slicing$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(expression_slicing_OBJECTS) $(expression_slicing_LDADD) $(LIBS)

extract$(EXEEXT): $(extract_OBJECTS) $(extract_DEPENDENCIES) $(EXTRA_extract_DEPENDENCIES) 
	@rm -f extract$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(extract_OBJECTS) $(extract_LDADD) $(LIBS)

free$(EXEEXT): $(free_OBJECTS) $(free_DEPENDENCIES) $(EXTRA_free_DEPENDENCIES) 
	@rm -f free$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(free_OBJECTS) $(free_LDADD) $(LIBS)

gary-huber-1$(EXEEXT): $(gary_huber_1_OBJECTS) $(gary_huber_1_DEPENDENCIES) $(EXTRA_gary_huber_1_DEPENDENCIES) 
	@rm -f gary-huber-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(gary_huber_1_OBJECTS) $(gary_huber_1_LDADD) $(LIBS)

indexexpr-base$(EXEEXT): $(indexexpr_base_OBJECTS) $(indexexpr_base_DEPENDENCIES) $(EXTRA_indexexpr_base_DEPENDENCIES) 
	@rm -f indexexpr-base$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(indexexpr_base_OBJECTS) $(indexexpr_base_LDADD) $(LIBS)

initialize$(EXEEXT): $(initialize_OBJECTS) $(initialize_DEPENDENCIES) $(EXTRA_initialize_DEPENDENCIES) 
	@rm -f initialize$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(initialize_OBJECTS) $(initialize_LDADD) $(LIBS)

int-math-func$(EXEEXT): $(int_math_func_OBJECTS) $(int_math_func_DEPENDENCIES) $(EXTRA_int_math_func_DEPENDENCIES) 
	@rm -f int-math-func$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(int_math_func_OBJECTS) $(int_math_func_LDADD) $(LIBS)

interlace$(EXEEXT): $(interlace_OBJECTS) $(interlace_DEPENDENCIES) $(EXTRA_interlace_DEPENDENCIES) 
	@rm -f interlace$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(interlace_OBJECTS) $(interlace_LDADD) $(LIBS)

iter$(EXEEXT): $(iter_OBJECTS) $(iter_DEPENDENCIES) $(EXTRA_iter_DEPENDENCIES) 
	@rm -f iter$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(iter_OBJECTS) $(iter_LDADD) $(LIBS)

levicivita$(EXEEXT): $(levicivita_OBJECTS) $(levicivita_DEPENDENCIES) $(EXTRA_levicivita_DEPENDENCIES) 
	@rm -f levicivita$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(levicivita_OBJECTS) $(levicivita_LDADD) $(LIBS)

loop1$(EXEEXT): $(loop1_OBJECTS) $(loop1_DEPENDENCIES) $(EXTRA_loop1_DEPENDENCIES) 
	@rm -f loop1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(loop1_OBJECTS) $(loop1_LDADD) $(LIBS)

matthias-troyer-1$(EXEEXT): $(matthias_troyer_1_OBJECTS) $(matthias_troyer_1_DEPENDENCIES) $(EXTRA_matthias_troyer_1_DEPENDENCIES) 
	@rm -f matthias-troyer-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(matthias_troyer_1_OBJECTS) $(matthias_troyer_1_LDADD) $(LIBS)

matthias-troyer-2$(EXEEXT): $(matthias_troyer_2_OBJECTS) $(matthias_troyer_2_DEPENDENCIES) $(EXTRA_matthias_troyer_2_DEPENDENCIES) 
	@rm -f matthias-troyer-2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(matthias_troyer_2_OBJECTS) $(matthias_troyer_2_LDADD) $(LIBS)

mattias-lindstroem-1$(EXEEXT): $(mattias_lindstroem_1_OBJECTS) $(mattias_lindstroem_1_DEPENDENCIES) $(EXTRA_mattias_lindstroem_1_DEPENDENCIES) 
	@rm -f mattias-lindstroem-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mattias_lindstroem_1_OBJECTS) $(mattias_lindstroem_1_LDADD) $(LIBS)

member_function$(EXEEXT): $(member_function_OBJECTS) $(member_function_DEPENDENCIES) $(EXTRA_member_function_DEPENDENCIES) 
	@rm -f member_function$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(member_function_OBJECTS) $(member_function_LDADD) $(LIBS)

minmax$(EXEEXT): $(minmax_OBJECTS) $(minmax_DEPENDENCIES) $(EXTRA_minmax_DEPENDENCIES) 
	@rm -f minmax$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(minmax_OBJECTS) $(minmax_LDADD) $(LIBS)

minsumpow$(EXEEXT): $(minsumpow_OBJECTS) $(minsumpow_DEPENDENCIES) $(EXTRA_minsumpow_DEPENDENCIES) 
	@rm -f minsumpow$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(minsumpow_OBJECTS) $(minsumpow_LDADD) $(LIBS)

module$(EXEEXT): $(module_OBJECTS) $(module_DEPENDENCIES) $(EXTRA_module_DEPENDENCIES) 
	@rm -f module$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(module_OBJECTS) $(module_LDADD) $(LIBS)

multicomponent$(EXEEXT): $(multicomponent_OBJECTS) $(multicomponent_DEPENDENCIES) $(EXTRA_multicomponent_DEPENDENCIES) 
	@rm -f multicomponent$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(multicomponent_OBJECTS) $(multicomponent_LDADD) $(LIBS)

multicomponent-2$(EXEEXT): $(multicomponent_2_OBJECTS) $(multicomponent_2_DEPENDENCIES) $(EXTRA_multicomponent_2_DEPENDENCIES) 
	@rm -f multicomponent-2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(multicomponent_2_OBJECTS) $(multicomponent_2_LDADD) $(LIBS)

newet$(EXEEXT): $(newet_OBJECTS) $(newet_DEPENDENCIES) $(EXTRA_newet_DEPENDENCIES) 
	@rm -f newet$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(newet_OBJECTS) $(newet_LDADD) $(LIBS)

patrik-jonsson-1$(EXEEXT): $(patrik_jonsson_1_OBJECTS) $(patrik_jonsson_1_DEPENDENCIES) $(EXTRA_patrik_jonsson_1_DEPENDENCIES) 
	@rm -f patrik-jonsson-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(patrik_jonsson_1_OBJECTS) $(patrik_jonsson_1_LDADD) $(LIBS)

peter-bienstman-1$(EXEEXT): $(peter_bienstman_1_OBJECTS) $(peter_bienstman_1_DEPENDENCIES) $(EXTRA_peter_bienstman_1_DEPENDENCIES) 
	@rm -f peter-bienstman-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(peter_bienstman_1_OBJECTS) $(peter_bienstman_1_LDADD) $(LIBS)

peter-bienstman-2$(EXEEXT): $(peter_bienstman_2_OBJECTS) $(peter_bienstman_2_DEPENDENCIES) $(EXTRA_peter_bienstman_2_DEPENDENCIES) 
	@rm -f peter-bienstman-2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(peter_bienstman_2_OBJECTS) $(peter_bienstman_2_LDADD) $(LIBS)

peter-bienstman-3$(EXEEXT): $(peter_bienstman_3_OBJECTS) $(peter_bienstman_3_DEPENDENCIES) $(EXTRA_peter_bienstman_3_DEPENDENCIES) 
	@rm -f peter-bienstman-3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(peter_bienstman_3_OBJECTS) $(peter_bienstman_3_LDADD) $(LIBS)

peter-bienstman-4$(EXEEXT): $(peter_bienstman_4_OBJECTS) $(peter_bienstman_4_DEPENDENCIES) $(EXTRA_peter_bienstman_4_DEPENDENCIES) 
	@rm -f peter-bienstman-4$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(peter_bienstman_4_OBJECTS) $(peter_bienstman_4_LDADD) $(LIBS)

peter-bienstman-5$(EXEEXT): $(peter_bienstman_5_OBJECTS) $(peter_bienstman_5_DEPENDENCIES) $(EXTRA_peter_bienstman_5_DEPENDENCIES) 
	@rm -f peter-bienstman-5$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(peter_bienstman_5_OBJECTS) $(peter_bienstman_5_LDADD) $(LIBS)

peter-nordlund-1$(EXEEXT): $(peter_nordlund_1_OBJECTS) $(peter_nordlund_1_DEPENDENCIES) $(EXTRA_peter_nordlund_1_DEPENDENCIES) 
	@rm -f peter-nordlund-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(peter_nordlund_1_OBJECTS) $(peter_nordlund_1_LDADD) $(LIBS)

peter-nordlund-2$(EXEEXT): $(peter_nordlund_2_OBJECTS) $(peter_nordlund_2_DEPENDENCIES) $(EXTRA_peter_nordlund_2_DEPENDENCIES) 
	@rm -f peter-nordlund-2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(peter_nordlund_2_OBJECTS) $(peter_nordlund_2_LDADD) $(LIBS)

peter-nordlund-3$(EXEEXT): $(peter_nordlund_3_OBJECTS) $(peter_nordlund_3_DEPENDENCIES) $(EXTRA_peter_nordlund_3_DEPENDENCIES) 
	@rm -f peter-nordlund-3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(peter_nordlund_3_OBJECTS) $(peter_nordlund_3_LDADD) $(LIBS)

preexisting$(EXEEXT): $(preexisting_OBJECTS) $(preexisting_DEPENDENCIES) $(EXTRA_preexisting_DEPENDENCIES) 
	@rm -f preexisting$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(preexisting_OBJECTS) $(preexisting_LDADD) $(LIBS)

promote$(EXEEXT): $(promote_OBJECTS) $(promote_DEPENDENCIES) $(EXTRA_promote_DEPENDENCIES) 
	@rm -f promote$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(promote_OBJECTS) $(promote_LDADD) $(LIBS)

pthread$(EXEEXT): $(pthread_OBJECTS) $(pthread_DEPENDENCIES) $(EXTRA_pthread_DEPENDENCIES) 
	@rm -f pthread$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pthread_OBJECTS) $(pthread_LDADD) $(LIBS)

qcd$(EXEEXT): $(qcd_OBJECTS) $(qcd_DEPENDENCIES) $(EXTRA_qcd_DEPENDENCIES) 
	@rm -f qcd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(qcd_OBJECTS) $(qcd_LDADD) $(LIBS)

reduce$(EXEEXT): $(reduce_OBJECTS) $(reduce_DEPENDENCIES) $(EXTRA_reduce_DEPENDENCIES) 
	@rm -f reduce$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(reduce_OBJECTS) $(reduce_LDADD) $(LIBS)

reindex$(EXEEXT): $(reindex_OBJECTS) $(reindex_DEPENDENCIES) $(EXTRA_reindex_DEPENDENCIES) 
	@rm -f reindex$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(reindex_OBJECTS) $(reindex_LDADD) $(LIBS)

reverse$(EXEEXT): $(reverse_OBJECTS) $(reverse_DEPENDENCIES) $(EXTRA_reverse_DEPENDENCIES) 
	@rm -f reverse$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(reverse_OBJECTS) $(reverse_LDADD) $(LIBS)

safeToReturn$(EXEEXT): $(safeToReturn_OBJECTS) $(safeToReturn_DEPENDENCIES) $(EXTRA_safeToReturn_DEPENDENCIES) 
	@rm -f safeToReturn$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(safeToReturn_OBJECTS) $(safeToReturn_LDADD) $(LIBS)

serialize$(EXEEXT): $(serialize_OBJECTS) $(serialize_DEPENDENCIES) $(EXTRA_serialize_DEPENDENCIES) 
	@rm -f serialize$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(serialize_OBJECTS) $(serialize_LDADD) $(LIBS)

shape$(EXEEXT): $(shape_OBJECTS) $(shape_DEPENDENCIES) $(EXTRA_shape_DEPENDENCIES) 
	@rm -f shape$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(shape_OBJECTS) $(shape_LDADD) $(LIBS)

shapecheck$(EXEEXT): $(shapecheck_OBJECTS) $(shapecheck_DEPENDENCIES) $(EXTRA_shapecheck_DEPENDENCIES) 
	@rm -f shapecheck$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(shapecheck_OBJECTS) $(shapecheck_LDADD) $(LIBS)

slice-iterators$(EXEEXT): $(slice_iterators_OBJECTS) $(slice_iterators_DEPENDENCIES) $(EXTRA_slice_iterators_DEPENDENCIES) 
	@rm -f slice-iterators$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(slice_iterators_OBJECTS) $(slice_iterators_LDADD) $(LIBS)

stencil-et$(EXEEXT): $(stencil_et_OBJECTS) $(stencil_et_DEPENDENCIES) $(EXTRA_stencil_et_DEPENDENCIES) 
	@rm -f stencil-et$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(stencil_et_OBJECTS) $(stencil_et_LDADD) $(LIBS)

stencil-extent$(EXEEXT): $(stencil_extent_OBJECTS) $(stencil_extent_DEPENDENCIES) $(EXTRA_stencil_extent_DEPENDENCIES) 
	@rm -f stencil-extent$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(stencil_extent_OBJECTS) $(stencil_extent_LDADD) $(LIBS)

storage$(EXEEXT): $(storage_OBJECTS) $(storage_DEPENDENCIES) $(EXTRA_storage_DEPENDENCIES) 
	@rm -f storage$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(storage_OBJECTS) $(storage_LDADD) $(LIBS)

stub$(EXEEXT): $(stub_OBJECTS) $(stub_DEPENDENCIES) $(EXTRA_stub_DEPENDENCIES) 
	@rm -f stub$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(stub_OBJECTS) $(stub_LDADD) $(LIBS)

theodore-papadopoulo-1$(EXEEXT): $(theodore_papadopoulo_1_OBJECTS) $(theodore_papadopoulo_1_DEPENDENCIES) $(EXTRA_theodore_papadopoulo_1_DEPENDENCIES) 
	@rm -f theodore-papadopoulo-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(theodore_papadopoulo_1_OBJECTS) $(theodore_papadopoulo_1_LDADD) $(LIBS)

tinymat$(EXEEXT): $(tinymat_OBJECTS) $(tinymat_DEPENDENCIES) $(EXTRA_tinymat_DEPENDENCIES) 
	@rm -f tinymat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tinymat_OBJECTS) $(tinymat_LDADD) $(LIBS)

tinyvec$(EXEEXT): $(tinyvec_OBJECTS) $(tinyvec_DEPENDENCIES) $(EXTRA_tinyvec_DEPENDENCIES) 
	@rm -f tinyvec$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tinyvec_OBJECTS) $(tinyvec_LDADD) $(LIBS)

transpose$(EXEEXT): $(transpose_OBJECTS) $(transpose_DEPENDENCIES) $(EXTRA_transpose_DEPENDENCIES) 
	@rm -f transpose$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(transpose_OBJECTS) $(transpose_LDADD) $(LIBS)

troyer-genilloud$(EXEEXT): $(troyer_genilloud_OBJECTS) $(troyer_genilloud_DEPENDENCIES) $(EXTRA_troyer_genilloud_DEPENDENCIES) 
	@rm -f troyer-genilloud$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(troyer_genilloud_OBJECTS) $(troyer_genilloud_LDADD) $(LIBS)

tvinitialize$(EXEEXT): $(tvinitialize_OBJECTS) $(tvinitialize_DEPENDENCIES) $(EXTRA_tvinitialize_DEPENDENCIES) 
	@rm -f tvinitialize$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tvinitialize_OBJECTS) $(tvinitialize_LDADD) $(LIBS)

update$(EXEEXT): $(update_OBJECTS) $(update_DEPENDENCIES) $(EXTRA_update_DEPENDENCIES) 
	@rm -f update$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(update_OBJECTS) $(update_LDADD) $(LIBS)

weakref$(EXEEXT): $(weakref_OBJECTS) $(weakref_DEPENDENCIES) $(EXTRA_weakref_DEPENDENCIES) 
	@rm -f weakref$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(weakref_OBJECTS) $(weakref_LDADD) $(LIBS)

wei-ku-1$(EXEEXT): $(wei_ku_1_OBJECTS) $(wei_ku_1_DEPENDENCIES) $(EXTRA_wei_ku_1_DEPENDENCIES) 
	@rm -f wei-ku-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wei_ku_1_OBJECTS) $(wei_ku_1_LDADD) $(LIBS)

where$(EXEEXT): $(where_OBJECTS) $(where_DEPENDENCIES) $(EXTRA_where_DEPENDENCIES) 
	@rm -f where$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(where_OBJECTS) $(where_LDADD) $(LIBS)

zeek-1$(EXEEXT): $(zeek_1_OBJECTS) $(zeek_1_DEPENDENCIES) $(EXTRA_zeek_1_DEPENDENCIES) 
	@rm -f zeek-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(zeek_1_OBJECTS) $(zeek_1_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/64bit-64bit.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Adnene-Ben-Abdallah-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Adnene-Ben-Abdallah-2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Josef-Wagenhuber.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Olaf-Ronneberger-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Ulisses-Mello-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alignment.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arrayinitialize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arrayresize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bitwise.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cast.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chris-jeffery-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chris-jeffery-2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chris-jeffery-3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/complex-test.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/constarray.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/contiguous.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/copy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctors.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/declfunc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/derrick-bass-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/derrick-bass-3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exprctor.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/expression-slicing.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extract.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/free.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gary-huber-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/indexexpr-base.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/initialize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/int-math-func.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interlace.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iter.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/levicivita.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matthias-troyer-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matthias-troyer-2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mattias-lindstroem-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/member_function.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/minmax.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/minsumpow.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/module1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/module2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multicomponent-2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multicomponent.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newet.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/patrik-jonsson-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peter-bienstman-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peter-bienstman-2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peter-bienstman-3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peter-bienstman-4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peter-bienstman-5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peter-nordlund-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peter-nordlund-2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peter-nordlund-3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/preexisting.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/promote.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pthread.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qcd.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reduce.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reindex.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reverse.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/safeToReturn.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shapecheck.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slice-iterators.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stencil-et.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stencil-extent.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storage.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stub.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/theodore-papadopoulo-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinymat.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinyvec.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transpose.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/troyer-genilloud.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tvinitialize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/update.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/weakref.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wei-ku-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/where.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zeek-1.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

64bit-64bit.o: 64bit.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(64bit_CXXFLAGS) $(CXXFLAGS) -MT 64bit-64bit.o -MD -MP -MF $(DEPDIR)/64bit-64bit.Tpo -c -o 64bit-64bit.o `test -f '64bit.cpp' || echo '$(srcdir)/'`64bit.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/64bit-64bit.Tpo $(DEPDIR)/64bit-64bit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='64bit.cpp' object='64bit-64bit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(64bit_CXXFLAGS) $(CXXFLAGS) -c -o 64bit-64bit.o `test -f '64bit.cpp' || echo '$(srcdir)/'`64bit.cpp

64bit-64bit.obj: 64bit.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(64bit_CXXFLAGS) $(CXXFLAGS) -MT 64bit-64bit.obj -MD -MP -MF $(DEPDIR)/64bit-64bit.Tpo -c -o 64bit-64bit.obj `if test -f '64bit.cpp'; then $(CYGPATH_W) '64bit.cpp'; else $(CYGPATH_W) '$(srcdir)/64bit.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/64bit-64bit.Tpo $(DEPDIR)/64bit-64bit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='64bit.cpp' object='64bit-64bit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(64bit_CXXFLAGS) $(CXXFLAGS) -c -o 64bit-64bit.obj `if test -f '64bit.cpp'; then $(CYGPATH_W) '64bit.cpp'; else $(CYGPATH_W) '$(srcdir)/64bit.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS) $(check_HEADERS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_HEADERS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
64bit.log: 64bit$(EXEEXT)
	@p='64bit$(EXEEXT)'; \
	b='64bit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Adnene-Ben-Abdallah-1.log: Adnene-Ben-Abdallah-1$(EXEEXT)
	@p='Adnene-Ben-Abdallah-1$(EXEEXT)'; \
	b='Adnene-Ben-Abdallah-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Adnene-Ben-Abdallah-2.log: Adnene-Ben-Abdallah-2$(EXEEXT)
	@p='Adnene-Ben-Abdallah-2$(EXEEXT)'; \
	b='Adnene-Ben-Abdallah-2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
alignment.log: alignment$(EXEEXT)
	@p='alignment$(EXEEXT)'; \
	b='alignment'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
arrayresize.log: arrayresize$(EXEEXT)
	@p='arrayresize$(EXEEXT)'; \
	b='arrayresize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
arrayinitialize.log: arrayinitialize$(EXEEXT)
	@p='arrayinitialize$(EXEEXT)'; \
	b='arrayinitialize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bitwise.log: bitwise$(EXEEXT)
	@p='bitwise$(EXEEXT)'; \
	b='bitwise'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
chris-jeffery-1.log: chris-jeffery-1$(EXEEXT)
	@p='chris-jeffery-1$(EXEEXT)'; \
	b='chris-jeffery-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
chris-jeffery-2.log: chris-jeffery-2$(EXEEXT)
	@p='chris-jeffery-2$(EXEEXT)'; \
	b='chris-jeffery-2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
chris-jeffery-3.log: chris-jeffery-3$(EXEEXT)
	@p='chris-jeffery-3$(EXEEXT)'; \
	b='chris-jeffery-3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
complex-test.log: complex-test$(EXEEXT)
	@p='complex-test$(EXEEXT)'; \
	b='complex-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
constarray.log: constarray$(EXEEXT)
	@p='constarray$(EXEEXT)'; \
	b='constarray'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
contiguous.log: contiguous$(EXEEXT)
	@p='contiguous$(EXEEXT)'; \
	b='contiguous'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
copy.log: copy$(EXEEXT)
	@p='copy$(EXEEXT)'; \
	b='copy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ctors.log: ctors$(EXEEXT)
	@p='ctors$(EXEEXT)'; \
	b='ctors'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
derrick-bass-1.log: derrick-bass-1$(EXEEXT)
	@p='derrick-bass-1$(EXEEXT)'; \
	b='derrick-bass-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
derrick-bass-3.log: derrick-bass-3$(EXEEXT)
	@p='derrick-bass-3$(EXEEXT)'; \
	b='derrick-bass-3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
exprctor.log: exprctor$(EXEEXT)
	@p='exprctor$(EXEEXT)'; \
	b='exprctor'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
expression-slicing.log: expression-slicing$(EXEEXT)
	@p='expression-slicing$(EXEEXT)'; \
	b='expression-slicing'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
extract.log: extract$(EXEEXT)
	@p='extract$(EXEEXT)'; \
	b='extract'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
free.log: free$(EXEEXT)
	@p='free$(EXEEXT)'; \
	b='free'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gary-huber-1.log: gary-huber-1$(EXEEXT)
	@p='gary-huber-1$(EXEEXT)'; \
	b='gary-huber-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
indexexpr-base.log: indexexpr-base$(EXEEXT)
	@p='indexexpr-base$(EXEEXT)'; \
	b='indexexpr-base'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
initialize.log: initialize$(EXEEXT)
	@p='initialize$(EXEEXT)'; \
	b='initialize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
int-math-func.log: int-math-func$(EXEEXT)
	@p='int-math-func$(EXEEXT)'; \
	b='int-math-func'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
interlace.log: interlace$(EXEEXT)
	@p='interlace$(EXEEXT)'; \
	b='interlace'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
iter.log: iter$(EXEEXT)
	@p='iter$(EXEEXT)'; \
	b='iter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Josef-Wagenhuber.log: Josef-Wagenhuber$(EXEEXT)
	@p='Josef-Wagenhuber$(EXEEXT)'; \
	b='Josef-Wagenhuber'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
levicivita.log: levicivita$(EXEEXT)
	@p='levicivita$(EXEEXT)'; \
	b='levicivita'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
loop1.log: loop1$(EXEEXT)
	@p='loop1$(EXEEXT)'; \
	b='loop1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
matthias-troyer-1.log: matthias-troyer-1$(EXEEXT)
	@p='matthias-troyer-1$(EXEEXT)'; \
	b='matthias-troyer-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
matthias-troyer-2.log: matthias-troyer-2$(EXEEXT)
	@p='matthias-troyer-2$(EXEEXT)'; \
	b='matthias-troyer-2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mattias-lindstroem-1.log: mattias-lindstroem-1$(EXEEXT)
	@p='mattias-lindstroem-1$(EXEEXT)'; \
	b='mattias-lindstroem-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
member_function.log: member_function$(EXEEXT)
	@p='member_function$(EXEEXT)'; \
	b='member_function'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
minmax.log: minmax$(EXEEXT)
	@p='minmax$(EXEEXT)'; \
	b='minmax'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
minsumpow.log: minsumpow$(EXEEXT)
	@p='minsumpow$(EXEEXT)'; \
	b='minsumpow'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
module.log: module$(EXEEXT)
	@p='module$(EXEEXT)'; \
	b='module'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
multicomponent.log: multicomponent$(EXEEXT)
	@p='multicomponent$(EXEEXT)'; \
	b='multicomponent'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
multicomponent-2.log: multicomponent-2$(EXEEXT)
	@p='multicomponent-2$(EXEEXT)'; \
	b='multicomponent-2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
newet.log: newet$(EXEEXT)
	@p='newet$(EXEEXT)'; \
	b='newet'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Olaf-Ronneberger-1.log: Olaf-Ronneberger-1$(EXEEXT)
	@p='Olaf-Ronneberger-1$(EXEEXT)'; \
	b='Olaf-Ronneberger-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
patrik-jonsson-1.log: patrik-jonsson-1$(EXEEXT)
	@p='patrik-jonsson-1$(EXEEXT)'; \
	b='patrik-jonsson-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
peter-bienstman-1.log: peter-bienstman-1$(EXEEXT)
	@p='peter-bienstman-1$(EXEEXT)'; \
	b='peter-bienstman-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
peter-bienstman-2.log: peter-bienstman-2$(EXEEXT)
	@p='peter-bienstman-2$(EXEEXT)'; \
	b='peter-bienstman-2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
peter-bienstman-3.log: peter-bienstman-3$(EXEEXT)
	@p='peter-bienstman-3$(EXEEXT)'; \
	b='peter-bienstman-3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
peter-bienstman-4.log: peter-bienstman-4$(EXEEXT)
	@p='peter-bienstman-4$(EXEEXT)'; \
	b='peter-bienstman-4'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
peter-bienstman-5.log: peter-bienstman-5$(EXEEXT)
	@p='peter-bienstman-5$(EXEEXT)'; \
	b='peter-bienstman-5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
peter-nordlund-1.log: peter-nordlund-1$(EXEEXT)
	@p='peter-nordlund-1$(EXEEXT)'; \
	b='peter-nordlund-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
peter-nordlund-2.log: peter-nordlund-2$(EXEEXT)
	@p='peter-nordlund-2$(EXEEXT)'; \
	b='peter-nordlund-2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
peter-nordlund-3.log: peter-nordlund-3$(EXEEXT)
	@p='peter-nordlund-3$(EXEEXT)'; \
	b='peter-nordlund-3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
preexisting.log: preexisting$(EXEEXT)
	@p='preexisting$(EXEEXT)'; \
	b='preexisting'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
promote.log: promote$(EXEEXT)
	@p='promote$(EXEEXT)'; \
	b='promote'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pthread.log: pthread$(EXEEXT)
	@p='pthread$(EXEEXT)'; \
	b='pthread'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
qcd.log: qcd$(EXEEXT)
	@p='qcd$(EXEEXT)'; \
	b='qcd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
reduce.log: reduce$(EXEEXT)
	@p='reduce$(EXEEXT)'; \
	b='reduce'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
reindex.log: reindex$(EXEEXT)
	@p='reindex$(EXEEXT)'; \
	b='reindex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
reverse.log: reverse$(EXEEXT)
	@p='reverse$(EXEEXT)'; \
	b='reverse'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
safeToReturn.log: safeToReturn$(EXEEXT)
	@p='safeToReturn$(EXEEXT)'; \
	b='safeToReturn'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shapecheck.log: shapecheck$(EXEEXT)
	@p='shapecheck$(EXEEXT)'; \
	b='shapecheck'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shape.log: shape$(EXEEXT)
	@p='shape$(EXEEXT)'; \
	b='shape'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
slice-iterators.log: slice-iterators$(EXEEXT)
	@p='slice-iterators$(EXEEXT)'; \
	b='slice-iterators'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
stencil-et.log: stencil-et$(EXEEXT)
	@p='stencil-et$(EXEEXT)'; \
	b='stencil-et'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
stencil-extent.log: stencil-extent$(EXEEXT)
	@p='stencil-extent$(EXEEXT)'; \
	b='stencil-extent'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
storage.log: storage$(EXEEXT)
	@p='storage$(EXEEXT)'; \
	b='storage'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
stub.log: stub$(EXEEXT)
	@p='stub$(EXEEXT)'; \
	b='stub'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
theodore-papadopoulo-1.log: theodore-papadopoulo-1$(EXEEXT)
	@p='theodore-papadopoulo-1$(EXEEXT)'; \
	b='theodore-papadopoulo-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinymat.log: tinymat$(EXEEXT)
	@p='tinymat$(EXEEXT)'; \
	b='tinymat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinyvec.log: tinyvec$(EXEEXT)
	@p='tinyvec$(EXEEXT)'; \
	b='tinyvec'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
transpose.log: transpose$(EXEEXT)
	@p='transpose$(EXEEXT)'; \
	b='transpose'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
troyer-genilloud.log: troyer-genilloud$(EXEEXT)
	@p='troyer-genilloud$(EXEEXT)'; \
	b='troyer-genilloud'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tvinitialize.log: tvinitialize$(EXEEXT)
	@p='tvinitialize$(EXEEXT)'; \
	b='tvinitialize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Ulisses-Mello-1.log: Ulisses-Mello-1$(EXEEXT)
	@p='Ulisses-Mello-1$(EXEEXT)'; \
	b='Ulisses-Mello-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
weakref.log: weakref$(EXEEXT)
	@p='weakref$(EXEEXT)'; \
	b='weakref'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wei-ku-1.log: wei-ku-1$(EXEEXT)
	@p='wei-ku-1$(EXEEXT)'; \
	b='wei-ku-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
where.log: where$(EXEEXT)
	@p='where$(EXEEXT)'; \
	b='where'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
zeek-1.log: zeek-1$(EXEEXT)
	@p='zeek-1$(EXEEXT)'; \
	b='zeek-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cast.log: cast$(EXEEXT)
	@p='cast$(EXEEXT)'; \
	b='cast'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
serialize.log: serialize$(EXEEXT)
	@p='serialize$(EXEEXT)'; \
	b='serialize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
update.log: update$(EXEEXT)
	@p='update$(EXEEXT)'; \
	b='update'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
declfunc.log: declfunc$(EXEEXT)
	@p='declfunc$(EXEEXT)'; \
	b='declfunc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_HEADERS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/64bit-64bit.Po
	-rm -f ./$(DEPDIR)/Adnene-Ben-Abdallah-1.Po
	-rm -f ./$(DEPDIR)/Adnene-Ben-Abdallah-2.Po
	-rm -f ./$(DEPDIR)/Josef-Wagenhuber.Po
	-rm -f ./$(DEPDIR)/Olaf-Ronneberger-1.Po
	-rm -f ./$(DEPDIR)/Ulisses-Mello-1.Po
	-rm -f ./$(DEPDIR)/alignment.Po
	-rm -f ./$(DEPDIR)/arrayinitialize.Po
	-rm -f ./$(DEPDIR)/arrayresize.Po
	-rm -f ./$(DEPDIR)/bitwise.Po
	-rm -f ./$(DEPDIR)/cast.Po
	-rm -f ./$(DEPDIR)/chris-jeffery-1.Po
	-rm -f ./$(DEPDIR)/chris-jeffery-2.Po
	-rm -f ./$(DEPDIR)/chris-jeffery-3.Po
	-rm -f ./$(DEPDIR)/complex-test.Po
	-rm -f ./$(DEPDIR)/constarray.Po
	-rm -f ./$(DEPDIR)/contiguous.Po
	-rm -f ./$(DEPDIR)/copy.Po
	-rm -f ./$(DEPDIR)/ctors.Po
	-rm -f ./$(DEPDIR)/declfunc.Po
	-rm -f ./$(DEPDIR)/derrick-bass-1.Po
	-rm -f ./$(DEPDIR)/derrick-bass-3.Po
	-rm -f ./$(DEPDIR)/exprctor.Po
	-rm -f ./$(DEPDIR)/expression-slicing.Po
	-rm -f ./$(DEPDIR)/extract.Po
	-rm -f ./$(DEPDIR)/free.Po
	-rm -f ./$(DEPDIR)/gary-huber-1.Po
	-rm -f ./$(DEPDIR)/indexexpr-base.Po
	-rm -f ./$(DEPDIR)/initialize.Po
	-rm -f ./$(DEPDIR)/int-math-func.Po
	-rm -f ./$(DEPDIR)/interlace.Po
	-rm -f ./$(DEPDIR)/iter.Po
	-rm -f ./$(DEPDIR)/levicivita.Po
	-rm -f ./$(DEPDIR)/loop1.Po
	-rm -f ./$(DEPDIR)/matthias-troyer-1.Po
	-rm -f ./$(DEPDIR)/matthias-troyer-2.Po
	-rm -f ./$(DEPDIR)/mattias-lindstroem-1.Po
	-rm -f ./$(DEPDIR)/member_function.Po
	-rm -f ./$(DEPDIR)/minmax.Po
	-rm -f ./$(DEPDIR)/minsumpow.Po
	-rm -f ./$(DEPDIR)/module1.Po
	-rm -f ./$(DEPDIR)/module2.Po
	-rm -f ./$(DEPDIR)/multicomponent-2.Po
	-rm -f ./$(DEPDIR)/multicomponent.Po
	-rm -f ./$(DEPDIR)/newet.Po
	-rm -f ./$(DEPDIR)/patrik-jonsson-1.Po
	-rm -f ./$(DEPDIR)/peter-bienstman-1.Po
	-rm -f ./$(DEPDIR)/peter-bienstman-2.Po
	-rm -f ./$(DEPDIR)/peter-bienstman-3.Po
	-rm -f ./$(DEPDIR)/peter-bienstman-4.Po
	-rm -f ./$(DEPDIR)/peter-bienstman-5.Po
	-rm -f ./$(DEPDIR)/peter-nordlund-1.Po
	-rm -f ./$(DEPDIR)/peter-nordlund-2.Po
	-rm -f ./$(DEPDIR)/peter-nordlund-3.Po
	-rm -f ./$(DEPDIR)/preexisting.Po
	-rm -f ./$(DEPDIR)/promote.Po
	-rm -f ./$(DEPDIR)/pthread.Po
	-rm -f ./$(DEPDIR)/qcd.Po
	-rm -f ./$(DEPDIR)/reduce.Po
	-rm -f ./$(DEPDIR)/reindex.Po
	-rm -f ./$(DEPDIR)/reverse.Po
	-rm -f ./$(DEPDIR)/safeToReturn.Po
	-rm -f ./$(DEPDIR)/serialize.Po
	-rm -f ./$(DEPDIR)/shape.Po
	-rm -f ./$(DEPDIR)/shapecheck.Po
	-rm -f ./$(DEPDIR)/slice-iterators.Po
	-rm -f ./$(DEPDIR)/stencil-et.Po
	-rm -f ./$(DEPDIR)/stencil-extent.Po
	-rm -f ./$(DEPDIR)/storage.Po
	-rm -f ./$(DEPDIR)/stub.Po
	-rm -f ./$(DEPDIR)/theodore-papadopoulo-1.Po
	-rm -f ./$(DEPDIR)/tinymat.Po
	-rm -f ./$(DEPDIR)/tinyvec.Po
	-rm -f ./$(DEPDIR)/transpose.Po
	-rm -f ./$(DEPDIR)/troyer-genilloud.Po
	-rm -f ./$(DEPDIR)/tvinitialize.Po
	-rm -f ./$(DEPDIR)/update.Po
	-rm -f ./$(DEPDIR)/weakref.Po
	-rm -f ./$(DEPDIR)/wei-ku-1.Po
	-rm -f ./$(DEPDIR)/where.Po
	-rm -f ./$(DEPDIR)/zeek-1.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/64bit-64bit.Po
	-rm -f ./$(DEPDIR)/Adnene-Ben-Abdallah-1.Po
	-rm -f ./$(DEPDIR)/Adnene-Ben-Abdallah-2.Po
	-rm -f ./$(DEPDIR)/Josef-Wagenhuber.Po
	-rm -f ./$(DEPDIR)/Olaf-Ronneberger-1.Po
	-rm -f ./$(DEPDIR)/Ulisses-Mello-1.Po
	-rm -f ./$(DEPDIR)/alignment.Po
	-rm -f ./$(DEPDIR)/arrayinitialize.Po
	-rm -f ./$(DEPDIR)/arrayresize.Po
	-rm -f ./$(DEPDIR)/bitwise.Po
	-rm -f ./$(DEPDIR)/cast.Po
	-rm -f ./$(DEPDIR)/chris-jeffery-1.Po
	-rm -f ./$(DEPDIR)/chris-jeffery-2.Po
	-rm -f ./$(DEPDIR)/chris-jeffery-3.Po
	-rm -f ./$(DEPDIR)/complex-test.Po
	-rm -f ./$(DEPDIR)/constarray.Po
	-rm -f ./$(DEPDIR)/contiguous.Po
	-rm -f ./$(DEPDIR)/copy.Po
	-rm -f ./$(DEPDIR)/ctors.Po
	-rm -f ./$(DEPDIR)/declfunc.Po
	-rm -f ./$(DEPDIR)/derrick-bass-1.Po
	-rm -f ./$(DEPDIR)/derrick-bass-3.Po
	-rm -f ./$(DEPDIR)/exprctor.Po
	-rm -f ./$(DEPDIR)/expression-slicing.Po
	-rm -f ./$(DEPDIR)/extract.Po
	-rm -f ./$(DEPDIR)/free.Po
	-rm -f ./$(DEPDIR)/gary-huber-1.Po
	-rm -f ./$(DEPDIR)/indexexpr-base.Po
	-rm -f ./$(DEPDIR)/initialize.Po
	-rm -f ./$(DEPDIR)/int-math-func.Po
	-rm -f ./$(DEPDIR)/interlace.Po
	-rm -f ./$(DEPDIR)/iter.Po
	-rm -f ./$(DEPDIR)/levicivita.Po
	-rm -f ./$(DEPDIR)/loop1.Po
	-rm -f ./$(DEPDIR)/matthias-troyer-1.Po
	-rm -f ./$(DEPDIR)/matthias-troyer-2.Po
	-rm -f ./$(DEPDIR)/mattias-lindstroem-1.Po
	-rm -f ./$(DEPDIR)/member_function.Po
	-rm -f ./$(DEPDIR)/minmax.Po
	-rm -f ./$(DEPDIR)/minsumpow.Po
	-rm -f ./$(DEPDIR)/module1.Po
	-rm -f ./$(DEPDIR)/module2.Po
	-rm -f ./$(DEPDIR)/multicomponent-2.Po
	-rm -f ./$(DEPDIR)/multicomponent.Po
	-rm -f ./$(DEPDIR)/newet.Po
	-rm -f ./$(DEPDIR)/patrik-jonsson-1.Po
	-rm -f ./$(DEPDIR)/peter-bienstman-1.Po
	-rm -f ./$(DEPDIR)/peter-bienstman-2.Po
	-rm -f ./$(DEPDIR)/peter-bienstman-3.Po
	-rm -f ./$(DEPDIR)/peter-bienstman-4.Po
	-rm -f ./$(DEPDIR)/peter-bienstman-5.Po
	-rm -f ./$(DEPDIR)/peter-nordlund-1.Po
	-rm -f ./$(DEPDIR)/peter-nordlund-2.Po
	-rm -f ./$(DEPDIR)/peter-nordlund-3.Po
	-rm -f ./$(DEPDIR)/preexisting.Po
	-rm -f ./$(DEPDIR)/promote.Po
	-rm -f ./$(DEPDIR)/pthread.Po
	-rm -f ./$(DEPDIR)/qcd.Po
	-rm -f ./$(DEPDIR)/reduce.Po
	-rm -f ./$(DEPDIR)/reindex.Po
	-rm -f ./$(DEPDIR)/reverse.Po
	-rm -f ./$(DEPDIR)/safeToReturn.Po
	-rm -f ./$(DEPDIR)/serialize.Po
	-rm -f ./$(DEPDIR)/shape.Po
	-rm -f ./$(DEPDIR)/shapecheck.Po
	-rm -f ./$(DEPDIR)/slice-iterators.Po
	-rm -f ./$(DEPDIR)/stencil-et.Po
	-rm -f ./$(DEPDIR)/stencil-extent.Po
	-rm -f ./$(DEPDIR)/storage.Po
	-rm -f ./$(DEPDIR)/stub.Po
	-rm -f ./$(DEPDIR)/theodore-papadopoulo-1.Po
	-rm -f ./$(DEPDIR)/tinymat.Po
	-rm -f ./$(DEPDIR)/tinyvec.Po
	-rm -f ./$(DEPDIR)/transpose.Po
	-rm -f ./$(DEPDIR)/troyer-genilloud.Po
	-rm -f ./$(DEPDIR)/tvinitialize.Po
	-rm -f ./$(DEPDIR)/update.Po
	-rm -f ./$(DEPDIR)/weakref.Po
	-rm -f ./$(DEPDIR)/wei-ku-1.Po
	-rm -f ./$(DEPDIR)/where.Po
	-rm -f ./$(DEPDIR)/zeek-1.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	clean-local cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


check-testsuite: check

clean-local:
	-rm -rf *.ii *.ti cxx_repository Template.dir ii_files ti_files

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
